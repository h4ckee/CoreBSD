diff -Naur src.orig/release/amd64/mkisoimages.sh src/release/amd64/mkisoimages.sh
--- src.orig/release/amd64/mkisoimages.sh	2025-06-06 00:04:20.000000000 +0000
+++ src/release/amd64/mkisoimages.sh	2025-08-13 10:31:39.388973000 +0000
@@ -59,19 +59,6 @@
 if [ "$1" = "-b" ]; then
 	# This is highly x86-centric and will be used directly below.
 	bootable="-o bootimage=i386;$BASEBITSDIR/boot/cdboot -o no-emul-boot"
-
-	# Make EFI system partition.
-	espfilename=$(mktemp /tmp/efiboot.XXXXXX)
-	# ESP file size in KB.
-	espsize="2048"
-	if [ -f "${BASEBITSDIR}/boot/loader_ia32.efi" ]; then
-		make_esp_file ${espfilename} ${espsize} ${BASEBITSDIR}/boot/loader.efi bootx64 \
-		    ${BASEBITSDIR}/boot/loader_ia32.efi bootia32
-	else
-		make_esp_file ${espfilename} ${espsize} ${BASEBITSDIR}/boot/loader.efi
-	fi
-	bootable="$bootable -o bootimage=i386;${espfilename} -o no-emul-boot -o platformid=efi"
-
 	shift
 else
 	bootable=""
@@ -87,8 +74,9 @@
 # MAKEFSARG extracted already
 shift
 
-publisher="The FreeBSD Project.  https://www.FreeBSD.org/"
+publisher="CoreBSD"
 echo "/dev/iso9660/$LABEL / cd9660 ro 0 0" > "$BASEBITSDIR/etc/fstab"
+echo "tmpfs /var tmpfs rw 0 0" >> "$BASEBITSDIR/etc/fstab"
 if [ -n "${METALOG}" ]; then
 	metalogfilename=$(mktemp /tmp/metalog.XXXXXX)
 	cat ${METALOG} > ${metalogfilename}
@@ -103,17 +91,6 @@
 fi
 
 if [ "$bootable" != "" ]; then
-	# Look for the EFI System Partition image we dropped in the ISO image.
-	for entry in `$ETDUMP --format shell $NAME`; do
-		eval $entry
-		if [ "$et_platform" = "efi" ]; then
-			espstart=`expr $et_lba \* 2048`
-			espsize=`expr $et_sectors \* 512`
-			espparam="-p efi::$espsize:$espstart"
-			break
-		fi
-	done
-
 	# Create a GPT image containing the partitions we need for hybrid boot.
 	hybridfilename=$(mktemp /tmp/hybrid.img.XXXXXX)
 	if [ "$(uname -s)" = "Linux" ]; then
@@ -125,7 +102,6 @@
 	    --capacity $imgsize \
 	    -b "$BASEBITSDIR/boot/pmbr" \
 	    -p freebsd-boot:="$BASEBITSDIR/boot/isoboot" \
-	    $espparam \
 	    -o $hybridfilename
 
 	# Drop the PMBR, GPT, and boot code into the System Area of the ISO.
